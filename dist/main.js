(()=>{"use strict";class t{constructor(t){this.data=t,this.left=null,this.right=null}}const e=(t,l="",r=!0)=>{null!==t&&(null!==t.right&&e(t.right,`${l}${r?"│   ":"    "}`,!1),console.log(`${l}${r?"└── ":"┌── "}${t.data}`),null!==t.left&&e(t.left,`${l}${r?"    ":"│   "}`,!0))},l=new class{constructor(t){this.root=this.buildTree(t)}buildTree(t){return 0===t.length?null:(t=[...new Set(t)].sort(((t,e)=>t-e)),this.buildTreeHelper(t,0,t.length-1))}buildTreeHelper(e,l,r){if(l>r)return null;const i=Math.floor((l+r)/2),n=new t(e[i]);return n.left=this.buildTreeHelper(e,l,i-1),n.right=this.buildTreeHelper(e,i+1,r),n}insert(e){const l=new t(e);if(!this.root)return void(this.root=l);let r=this.root,i=null;for(;r;)if(i=r,e<r.data){if(r=r.left,!r)return void(i.left=l)}else{if(!(e>r.data))return;if(r=r.right,!r)return void(i.right=l)}}deleteItem(t,e){if(null===t)return t;if(e<t.value)t.left=this.deleteItem(t.left,e);else if(e>t.value)t.right=this.deleteItem(t.right,e);else{if(null===t.left)return t.right;if(null===t.right)return t.left;t.value=this.minValue(t.right),t.right=this.deleteItem(t.right,t.value)}return t}minValue(t){let e=t.value;for(;null!==t.left;)e=t.left.value,t=t.left;return e}find(t){let e=this.root;for(;e;)if(t<e.data)e=e.left;else{if(!(t>e.data))return e;e=e.right}return null}}([10,5,20,3,7,15,30]);console.log(l.root),console.log(e(l))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,